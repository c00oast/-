# 1. leetcode 125번

##sol1 list
def isPalindrome(self, s:str) -> bool
 strs = [] 
 for char in s: # s라는 string 안에의 char들을 하나씩 조회
  if char.isalnum(): # 숫자인지 문자인지 확인해주기
   strs.append(char.lower()) # 모두 소문자로 바꿔주기
 while len(strs) > 1 : #빈 array가 될때까지 반복해라
  if strs.pop(0) != strs.pop() : #첫번째와 마직막을 비교해서 다르면
   return False #False출력
 return True #끝까지 돌려서 다르지 않다면 True 출력
 
##sol2 deque 이용
def is Palindrome(self, s:str) -> bool
 strs= deque() #deque 이용
 for char in s:
  if char.isalnum():
   strs.append(char.lower())
 while len(strs) > 1 :
  if strs.popleft() != strs.pop() :
   return False
 return True

##sol3 슬라이싱 이용
def is Palindrome(self, s:str) -> bool
 s=s.lower() #소문자로 바꾸고
 s=re.sub('[^a-z0-9]','',s) #정규식을 불필요한 문자로 필터링
 
 return s == s[::-1] # 처음순서대로 본거랑 거꾸로 본거랑 비교
 
 
# 2. leetcode 344번
##sol1
def reverseString(self, s: List[str])) -> None:
 s.reverse()
 
##sol2 pointer이용
def reverseString(self, s: List[str])) -> None:
 left, right = 0, len(s) - 1
 while left < right
  s[left], s[right] = s[right], s[left]
  left += 1
  right -= 1
  
 
# 3. leetcode 937번
##sol1 람다 + 연산자 이용
def reorderLogFiles(self, logs: List[str]) -> List[str] :
 letters, digits = [], []
 for log in logs:
  if log.split()[1].isdigit(): #두번째 단락부터 숫자인지 문자인지 보기
   digits.append(log) 
  else:
   letters.append(log)
 
 letters.sort(key = lambda x:(x.split()[1:],x.split()[0])) #letter이면 두번째 단락부터 sort하고 첫번째 단락부터 sort하기
 return letters + digits


# 4. leetcode 819
## sol1
def mostCommonWord(self, paragraph: str, banned: List[str] -> str:
 words = [word for word in re.sub(r'[\w]','',paragraph).lower().split() if word not in banned] #일단 단어만 남기고 정리
 counts = collections.Counter(words) #collections.Counter자료구조로 개수 세기
 return Counts.most_common(1)[0][0] #첫번째(1)의 [0]번째의 [0]번째 나타내야함
 

#5. leetcode 49
##sol1
def groupAnagrams(self, strs: List[str]) -> List[List[str]]:
 anagrams = collections.defaultdict(list) # key를 딕셔너리에 넣을때 keyerror가 발생할 수 있으므로 collections.defaultdict를 선언해준다.
 for word in strs:
  anagrams[''.join(sorted(word))].append(word) # sorted를 하면 리스트가 되는데 이를 join하여 key로 사용한다.
 return list(anagrams.values())

#6. leetcode 5
